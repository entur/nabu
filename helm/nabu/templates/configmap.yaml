apiVersion: v1
data:
  application.properties: |-

    #Spring mail configuration
    spring.mail.properties.mail.smtp.writetimeout=5000
    spring.mail.properties.mail.smtp.connecttimeout=5000
    spring.mail.properties.mail.smtp.timeout=3000
    spring.mail.properties.mail.smtp.ssl.enable=false
    spring.mail.properties.mail.smtp.starttls.enable=true
    spring.mail.host=smtp.postmarkapp.com
    notification.email.send.cron=0 0 * * * ?
    new.user.email.enabled=true
    email.link.stop.place={{ .Values.configMap.mail.stopPlace }}
    email.link.routedb={{ .Values.configMap.mail.routedb }}
    notification.email.from={{ .Values.configMap.mail.notificationFrom }}
    email.link.operator={{ .Values.configMap.mail.operator }}
    server.port=9004
    spring.mail.port=2525

    # Database config
    spring.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostgisPG95Dialect
    spring.database.driverClassName=org.postgresql.Driver
    spring.jpa.open-in-view=false
    spring.datasource.url=jdbc:postgresql://localhost:5432/nabu
    spring.jpa.database=POSTGRESQL
    spring.jpa.hibernate.use-new-id-generator-mappings=true
    spring.jpa.properties.hibernate.cache.use_second_level_cache=false
    spring.jpa.properties.hibernate.cache.region.factory_class=com.hazelcast.hibernate.HazelcastCacheRegionFactory
    spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
    spring.jpa.properties.hibernate.cache.use_minimal_puts=true
    spring.jpa.properties.hibernate.cache.use_query_cache=false
    spring.jpa.show-sql=false
    spring.datasource.platform=postgres
    spring.flyway.table=schema_version

    #OAuth2 Resource Server
    nabu.oauth2.resourceserver.auth0.ror.jwt.issuer-uri={{ .Values.configMap.auth0.ror.url }}
    nabu.oauth2.resourceserver.auth0.ror.jwt.audience={{ .Values.configMap.auth0.ror.audience }}
    nabu.oauth2.resourceserver.auth0.ror.claim.namespace={{ .Values.configMap.auth0.ror.claim.namespace }}

    nabu.oauth2.resourceserver.keycloak.jwt.issuer-uri={{ .Values.configMap.keycloak.url }}/realms/rutebanken
    nabu.oauth2.resourceserver.keycloak.jwt.jwkset-uri={{ .Values.configMap.keycloak.url }}/realms/rutebanken/protocol/openid-connect/certs
    nabu.oauth2.resourceserver.keycloak.jwt.audience=account

    #OAuth2 Client
    spring.security.oauth2.client.registration.nabu.authorization-grant-type=client_credentials
    spring.security.oauth2.client.registration.nabu.client-id={{ .Values.configMap.oauth2.client.id }}
    spring.security.oauth2.client.provider.nabu.token-uri={{ .Values.configMap.oauth2.client.url }}
    nabu.oauth2.client.audience={{ .Values.configMap.oauth2.client.audience }}

    #Logging config
    logging.level.org.hibernate.SQL=INFO
    logging.level.org.hibernate.tool.hbm2ddl=INFO
    logging.level.no.rutebanken=INFO
    logging.level.org.apache=WARN
    logging.level.org.hibernate.type=WARN
    logging.level.org.springframework.orm.hibernate4.support=WARN

    #pubsub config
    spring.cloud.gcp.pubsub.project-id={{ .Values.configMap.pubsubProjectId }}
    spring.cloud.gcp.pubsub.credentials.location=file:/etc/nabu-service-account/credentials.json
    spring.cloud.gcp.pubsub.subscriber.parallel-pull-count=1
    spring.cloud.gcp.pubsub.subscriber.executor-threads=30
    spring.cloud.gcp.pubsub.subscriber.max-ack-extension-period=36000
    entur.pubsub.subscriber.autocreate=false

    #quartz config
    quartz.enabled=true
    spring.quartz.job-store-type=jdbc
    spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
    spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
    spring.quartz.properties.org.quartz.jobStore.useProperties=false
    spring.quartz.properties.org.quartz.jobStore.tablePrefix=QRTZ_
    spring.quartz.properties.org.quartz.jobStore.isClustered=true
    spring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval=2000

    management.server.port=9001
    management.endpoints.enabled-by-default=false
    management.endpoint.info.enabled=true
    management.endpoint.health.enabled=true
    management.endpoint.health.group.readiness.include=readinessState,db,pubSub
    management.endpoint.prometheus.enabled=true
    management.endpoints.web.exposure.include=info,health,prometheus
    management.health.mail.enabled=false

    administrative.zone.registry.rest.service.url=http://baba/services/organisations/administrative_zones/
    user.registry.rest.service.url=http://baba/services/organisations/users?full=true
    provider.registry.rest.service.url=http://baba/services/providers/
    spring.main.allow-bean-definition-overriding=true
kind: ConfigMap
metadata:
  name: {{ template "nabu.name" . }}-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | indent 4 }}
